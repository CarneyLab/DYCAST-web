@model string

<script src='//api.mapbox.com/mapbox-gl-js/v0.42.0/mapbox-gl.js'></script>
<link href='//api.mapbox.com/mapbox-gl-js/v0.42.0/mapbox-gl.css' rel='stylesheet' />
<script src='//api.mapbox.com/mapbox.js/plugins/geojson-extent/v0.0.1/geojson-extent.js'></script>
<script src='//d3js.org/d3.v3.min.js' charset='utf-8'></script>
<script src='//cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.1/moment.js'></script>



@{
    ViewData["Title"] = "Dycast Map";
}

<div style="margin-top: 2vh; text-align: center">
    <div style="margin-bottom: 10px;">
        <h2 class="title">@ViewData["Title"]</h2>
        <input id="fromDate" type="date" value="" />
        <input id="toDate" type="date" value="" />
        <input type="button" value="Go" onclick="updateMap()" />
    </div>
    <div>
        <div id='map' style='width: 100%; height: 60vh; text-align: left;'></div>
        <img class="throbber" id="throbber" src="~/images/throbber.gif" style="display: none;" />
    </div>
    <div id="slider">
        <div class="legend">
            <table>
                <tr>
                    <td>
                        <div class="legendItem">
                            <p id="sliderHeader">Loading data...</p>
                        </div>
                    </td>
                    <td>
                        <div class="legendItem">
                            <p>Risk (high to low)</p>
                            <div class="pValueBar">
                                <p style="float: left; margin-left: 4px;"><sup>0</sup></p>
                                <p style="float: right; margin-right: 4px;"><sup>1</sup></p>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
        <input type="range" min="1" max="100" step="1" />
    </div>
</div>


@section Scripts {
    <script>
        mapboxgl.accessToken = '@ViewData["MapboxAccessToken"]';

        var map = new mapboxgl.Map({
            container: 'map',
            center: [16.5290012, 18.6094458],
            zoom: 13,
            style: 'mapbox://styles/mapbox/outdoors-v9'
        });


        function filterByDate(date) {
            dateString = moment(date).format('YYYY-MM-DD');
            var filter = ['==', 'date', dateString];
            map.setFilter('points', filter);
            $('#sliderHeader').html(dateString);
        }


        function setSliderEvent() {
            $('#slider input').on('input', function () {
                var selectedDateValue = $('#slider input')[0].value;
                selectedDate = new Date(+selectedDateValue);

                filterByDate(selectedDate);
            });
        }


        function setSliderValues(fromDate, toDate) {
            $('#slider input')
                .attr('min', Date.parse(fromDate))
                .attr('max', Date.parse(toDate))
                .attr('step', 86400000)
                .val(Date.parse(fromDate));
        }


        function setDatePickerValues(fromDate, toDate) {
            $('#fromDate').val(moment(fromDate).format('YYYY-MM-DD'));
            $('#toDate').val(moment(toDate).format('YYYY-MM-DD'));
        }


        function updateMap() {
            var fromDate = new Date($('#fromDate').val());
            var toDate = new Date($('#toDate').val());

            $('.throbber').show();
            d3.json(`/api/Risk?fromDate=${fromDate.toDateString()}&toDate=${toDate.toDateString()}`, function (err, data) {
                const source = map.getSource('riskGeoJson');
                source.setData(data);
                var bounds = geojsonExtent(data);
                map.fitBounds(bounds, { padding: 50 });
            });
            setSliderValues(fromDate, toDate);
            filterByDate(fromDate);
        }



        // Map events

        map.on('click', function (e) {
            var features = map.queryRenderedFeatures(e.point, {
                layers: ['points']
            });

            if (!features.length) {
                return
            }

            var feature = features[0];

            var popup = new mapboxgl.Popup({ offset: [0, -15] })
                .setLngLat(feature.geometry.coordinates)
                .setHTML('<h3>' + feature.properties.date + '</h3>' +
                '<p>P-value: ' + feature.properties.pValue + '</p>')
                .addTo(map);
        });


        map.on('load', function () {

            var fromDate = new Date('2016-03-09');
            var toDate = new Date('2016-03-20');

            $('.throbber').show();

            d3.json(`/api/Risk?fromDate=${fromDate.toDateString()}&toDate=${toDate.toDateString()}`, function (err, data) {
                map.addSource('riskGeoJson', {
                    type: 'geojson',
                    data: data
                });

                map.addLayer({
                    'id': 'points',
                    'type': 'circle',
                    'source': 'riskGeoJson',
                    'paint': {
                        'circle-color': {
                            property: 'pValue',
                            stops: [
                                [0.00001, '#FC0908'],
                                [1, '#FCA107']
                            ]
                        },
                        'circle-opacity': 0.75,
                        'circle-radius': 5
                    }
                });

                setSliderEvent();
                setSliderValues(fromDate, toDate);
                setDatePickerValues(fromDate, toDate);
                filterByDate(fromDate);

                var bounds = geojsonExtent(data);
                map.fitBounds(bounds, { padding: 50 });
            });
        });


        map.on('data', function (data) {
            if (data.dataType === 'source' && data.isSourceLoaded) {
                $('#throbber').hide();
            }
        });
    </script>
}